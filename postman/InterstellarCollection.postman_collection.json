{
	"info": {
		"_postman_id": "70cae866-2b29-4165-9e9c-8168a5d43daf",
		"name": "InterstellarCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42359286"
	},
	"item": [
		{
			"name": "Get All Gates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Results should be an array and not empty.\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.not.be.empty;",
							"    pm.expect(response).to.be.a('array');",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/gates",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Details of ALD Gate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Results should have the correct info.\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.gateID).to.eq('ALD');",
							"    pm.expect(response.gateName).to.eq('Aldermain');",
							"    pm.expect(response.connections.length).to.eq(3);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/gates/ALD",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates",
						"ALD"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get cheapest route from SOL to VEG",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"SOL to VEG route should cost 46.\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.route).to.eq('SOL -> PRX -> ALT -> VEG');",
							"    pm.expect(response.cost).to.eq(46.0);",
							"    pm.expect(response.distance_hu).to.eq(460);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/gates/SOL/to/VEG",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates",
						"SOL",
						"to",
						"VEG"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cheapest Vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Results of cheapest vehicle should have the correct info.\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.hstc_transport_cost).to.eq(2.394);",
							"    pm.expect(response.personal_transport_cost).to.eq(51.995);",
							"    pm.expect(response.cheapest_vehicle).to.eq('hstc_transport');",
							"    pm.expect(response.no_personal_transport_needed).to.eq(5);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/transport/1.33?passengers=19&parking=2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transport",
						"1.33"
					],
					"query": [
						{
							"key": "passengers",
							"value": "19"
						},
						{
							"key": "parking",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Gate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// pm.test(\"New gate successfully created.\", function () {",
							"//     pm.expect(pm.response.json()).to.eq(\"Gate successfully created\");",
							"// });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\":\"NG1\",\n    \"name\":\"NewGate\",\n    \"connections\":\n        [{ \"id\": \"SOL\", \"hu\": \"500\" },\n        { \"id\": \"DEN\", \"hu\": \"120\" }]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gates",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Gate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// pm.test(\"New gate successfully created.\", function () {",
							"//     pm.expect(pm.response.json()).to.eq(\"Gate successfully created\");",
							"// });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"NewGateUpdated\",\n    \"connections\":\n        [{ \"id\": \"SOL\", \"hu\": \"500\" },\n        { \"id\": \"DEN\", \"hu\": \"120\" }]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gates/NG",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates",
						"NG"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Gate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/gates/NG1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gates",
						"NG1"
					]
				}
			},
			"response": []
		}
	]
}